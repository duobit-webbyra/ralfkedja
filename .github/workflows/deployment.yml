name: Deployment process on main merge 

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.16.0'  # Or specify your Node.js version

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run Lint
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint  # This ensures the build only runs if lint passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Set these secrets in GitHub
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          docker build -t my-app:latest .
          docker tag my-app:latest my-dockerhub-username/my-app:latest

      - name: Push Docker image to DockerHub
        run: docker push my-dockerhub-username/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures deploy only runs if the build passes

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}  # Private SSH key stored in GitHub Secrets
          port: ${{ secrets.SERVER_SSH_PORT }}  # Optional, default is 22
          script: |
            cd /root/org/  # Replace with the correct path on the server
            docker compose pull ralfkedja # Pull the latest image
            docker compose up -d  # Recreate containers with the latest image
